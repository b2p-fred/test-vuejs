name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - develop
      - main
      - master

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Run linter 👀
        run: yarn lint

      - name: Run tests 🧪
        run: yarn test:unit

      - name: Upload tests results
        uses: actions/upload-artifact@v2
        with:
          name: tests-coverage-reports
          path: artifacts/clover.xml
          if-no-files-found: error

      - name: Upload unit tests code coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./artifacts/clover.xml
          flags: frontend-unit-tests
          env_vars: OS,NODE
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: false

